// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AccessSettings /> should handle generating certificate 1`] = `
<div>
  <h1>
    Access Settings
  </h1>
  <p>
    Here you can set up your router to be configured remotely. The remote configuration is done via a secure encrypted connection, and each client is required to have a token issued by this device.
  </p>
  <p>
    It can be useful when you plan to access the configuration interface from another Turris router, or you intend to write your client.
  </p>
  <div
    class="card p-4 col-sm-12 col-lg-12 p-0 mb-4"
  >
    <h2>
      Generating Certificate Authority
    </h2>
    <p>
      Your certificate authority is now being generated. It usually takes a few minutes. Settings will appear here automatically once the authority is ready.
    </p>
    <div
      class="spinner-wrapper my-3 text-center"
    >
      <div
        class="spinner-border"
        role="status"
      >
        <span
          class="sr-only"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<AccessSettings /> should handle missing certificate 1`] = `
<div>
  <h1>
    Access Settings
  </h1>
  <p>
    Here you can set up your router to be configured remotely. The remote configuration is done via a secure encrypted connection, and each client is required to have a token issued by this device.
  </p>
  <p>
    It can be useful when you plan to access the configuration interface from another Turris router, or you intend to write your client.
  </p>
  <div
    class="card p-4 col-sm-12 col-lg-12 p-0 mb-4"
  >
    <h2>
      No Certificate Authority
    </h2>
    <p>
      Currently, there is no certificate authority (CA) dedicated to remote access. A CA is required to generate access tokens to authenticate. To proceed, you need to generate it first.
    </p>
    <div
      class="text-end"
    >
      <button
        class="btn btn-primary col-12 col-md-3 col-lg-2 d-inline-flex justify-content-center align-items-center"
        type="button"
      >
        <span>
          Generate Certificate Authority
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`<AccessSettings /> should handle ready certificate 1`] = `
<div>
  <h1>
    Access Settings
  </h1>
  <p>
    Here you can set up your router to be configured remotely. The remote configuration is done via a secure encrypted connection, and each client is required to have a token issued by this device.
  </p>
  <p>
    It can be useful when you plan to access the configuration interface from another Turris router, or you intend to write your client.
  </p>
  <div
    class="card p-4 col-sm-12 col-lg-12 p-0 mb-4"
  >
    <h2>
      Remote Access
    </h2>
    <form>
      <div
        class="form-check form-switch mb-3"
      >
        <input
          class="form-check-input"
          id="1"
          role="switch"
          type="checkbox"
        />
        <label
          class="form-check-label"
          for="1"
        >
          Enable Remote Access
        </label>
      </div>
      <div
        class="text-end"
      >
        <button
          class="btn btn-primary col-12 col-md-3 col-lg-2 d-inline-flex justify-content-center align-items-center"
          data-testid="save-settings-button"
          type="submit"
        >
          <span>
            Save
          </span>
        </button>
      </div>
    </form>
  </div>
  <div
    class="card p-4 col-sm-12 col-lg-12 p-0 mb-4"
  >
    <h2>
      Certificate Authority
    </h2>
    <p>
      Your certificate authority is set up properly. Please note that if you delete it, all clients will have their access revoked.
    </p>
    <div
      class="text-end"
    >
      <button
        class="btn btn-primary col-12 col-md-3 col-lg-2 d-inline-flex justify-content-center align-items-center"
        type="button"
      >
        <span>
          Delete Certificate Authority
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`<AccessSettings /> should render error 1`] = `
<div>
  <h1>
    Access Settings
  </h1>
  <p>
    Here you can set up your router to be configured remotely. The remote configuration is done via a secure encrypted connection, and each client is required to have a token issued by this device.
  </p>
  <p>
    It can be useful when you plan to access the configuration interface from another Turris router, or you intend to write your client.
  </p>
  <p
    class="text-center text-danger"
  >
    An error occurred while fetching data.
  </p>
</div>
`;

exports[`<AccessSettings /> should render spinner 1`] = `
<div>
  <h1>
    Access Settings
  </h1>
  <p>
    Here you can set up your router to be configured remotely. The remote configuration is done via a secure encrypted connection, and each client is required to have a token issued by this device.
  </p>
  <p>
    It can be useful when you plan to access the configuration interface from another Turris router, or you intend to write your client.
  </p>
  <div
    class="spinner-wrapper my-3 text-center"
  >
    <div
      class="spinner-border"
      role="status"
    >
      <span
        class="sr-only"
      />
    </div>
  </div>
</div>
`;
